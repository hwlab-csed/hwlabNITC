{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Welcome to the Hardware Lab Guide","text":"<p>This course covers the following topics-</p>"},{"location":"#_1","title":"Home","text":"<ul> <li> <p><code>Introduction to Verilog and Single Cycle</code> - Verilog is a hardware description language (HDL) used for designing and simulating digital systems. In this course, you will learn about Verilog in detail, including its syntax, data types, modules, behavioral modeling, and structural modeling. You will also understand how to simulate and test your Verilog designs and further run basic MIPS instructions using your own Single Cycle program.</p> </li> <li> <p><code>Introduction to MIPS ISA</code> -  MIPS (Microprocessor without Interlocked Pipeline Stages) is a reduced instruction set computer (RISC) architecture commonly used in embedded systems and educational environments. In this course, you will dive into the details of the MIPS architecture, including its instruction set, registers, memory organization, and execution flow. You will also learn how to write MIPS assembly code and understand the basic concepts of computer organization and architecture.</p> </li> </ul>"},{"location":"#course-layout","title":"Course Layout","text":"<p>This tutorial is split into a 2 parts for each topic-  \u2003\u2003 1. Theory - This part focuses on the theoretical concepts and principles of the topic. You will find comprehensive documentation and video explanation that covers the fundamental ideas, techniques, and best practices related to Verilog and MIPS. These resources will provide you with a solid understanding of the topics and their applications.  </p> <p>\u2003\u2003 2. Implementation - This part emphasizes the practical aspect of the course. You will find documentation and video tutorials that guide you through the implementation of Verilog designs and MIPS assembly code. This hands-on approach will help you gain practical skills and experience in designing and working with digital systems using Verilog and MIPS.  </p> <p>By following this course layout, you will have a well-rounded understanding of Verilog and MIPS, both from a theoretical and practical perspective.</p>"},{"location":"about/","title":"About Us","text":"<p>Welcome to the Hardware Lab at Computer Science and Engineering Department of National Institute of Technology, Calicut. We are a team of dedicated individuals who have come together to create a comprehensive resource for students studying computer hardware in the department.</p>"},{"location":"about/#our-philosophy","title":"Our Philosophy","text":"<p>Our mission is to provide students with a valuable tool that enhances their learning experience in the hardware lab course. We aim to simplify complex concepts, offer practical tips, and provide step-by-step guides to help students excel in their studies.</p>"},{"location":"about/#the-computer-science-department","title":"The Computer Science Department","text":"<p>The Computer Science Department of NITC is a leading academic department that fosters innovation, research, and excellence in the field of computer science. Our department offers a wide range of courses and programs designed to equip students with the knowledge and skills required to thrive in the ever-evolving world of technology.For more information visit https://minerva.nitc.ac.in/</p>"},{"location":"about/#the-hardware-lab-course-guide-team","title":"The Hardware Lab Course Guide Team","text":""},{"location":"about/#faculty","title":"Faculty","text":"<ul> <li>Prof. Srinivasa TM </li> <li>Prof. Nirmal Kumar Boran </li> </ul>"},{"location":"about/#the-mips-team","title":"The MIPS Team","text":"<ul> <li>Mohammad Saad</li> <li>Naeem Niaz</li> <li>Chandrakant V Bellary</li> <li>Mithunraj M </li> <li>Abel Mani Roy</li> </ul>"},{"location":"about/#the-verilog-team","title":"The Verilog Team","text":"<ul> <li>Arshiya P Hafis</li> <li>Avinash Kumar</li> <li>Akshit Kumar</li> <li>Aritro Ghosh</li> <li>Arjun Krishna</li> </ul>"},{"location":"about/#web-and-repository-maintenance","title":"Web and Repository Maintenance","text":"<ul> <li>Mohammad Saad</li> <li>Aritro Ghosh</li> </ul>"},{"location":"about/#join-our-team","title":"Join Our Team","text":"<p>We are always looking to expand our team and welcome individuals who share our passion for computer hardware education. If you are interested in contributing to the Hardware Lab Course Guide or have any suggestions, we would love to hear from you. Please reach out to us at hwlab_csed@nitc.ac.in </p> <p>Thank you for visiting the Computer Science Department's Hardware Lab Course Guide. We hope this resource serves as a valuable tool for your studies and contributes to your success in the fascinating world of computer hardware.</p>"},{"location":"mips_main/","title":"Welcome to the MIPS Guide","text":"<p>This course covers the following topics-</p>"},{"location":"mips_main/#_1","title":"MIPS","text":"<ul> <li><code>Introduction to MIPS</code> - Setting up and understanding MIPS ISA.</li> <li><code>Basic Integer and String Handling</code> - Learn the Basics of MIPS integers.</li> <li><code>Integer Array Handling</code> - Learn how to make integer arrays and operate them.</li> <li><code>2-D Array Handling</code> - Extend your array knowledge with 2-D arrays.</li> <li><code>Strings (Advanced)</code> - String Handling explained in detail.</li> <li><code>Floating Points</code> - Learn how to handle floating point numbers.</li> </ul>"},{"location":"mips_main/#introduction-to-mips","title":"Introduction to MIPS","text":"<p>\u2003\u2003Main Documentation  : Click Here \u2003\u2003Theory explanation:  Video Link   \u2003\u2003Setting up MARS: \u2003\u2003\u2003\u2003 1.  Video Link   \u2003\u2003\u2003\u2003 2.  Sample Code  </p>"},{"location":"mips_main/#basic-integer-and-string-handling","title":"Basic Integer and String Handling","text":"<p>\u2003\u2003Main Documentation  : Click Here \u2003\u2003Theory Explanation: Video Link   \u2003\u2003Sample Code Bank: \u2003\u2003\u2003\u2003 1.  Reversing 2 digit number  \u2003\u2003\u2003\u2003 2.  Calculating Average Marks  \u2003\u2003\u2003\u2003 3.  Finding Spy Number  </p>"},{"location":"mips_main/#floating-point-handling","title":"Floating Point Handling","text":"<p>\u2003\u2003Main Documentation  : Click Here  \u2003\u2003Farenheit to Celcius:  Sample Code   \u2003\u2003Maximum and Minimum in Float Array:  Sample Code   \u2003\u2003 Round off to n digits:  Sample Code  </p>"},{"location":"mips_main/#integer-array-handling","title":"Integer Array Handling","text":"<p>\u2003\u2003Main Documentation (Also contains String advanced) : Click Here </p> <p>\u2003\u2003Introduction to Integer Arrays: \u2003\u2003\u2003\u2003 1.  Video   \u2003\u2003\u2003\u2003 2.  Sample Code  </p> <p>\u2003\u2003Sum of Elements of an Array: \u2003\u2003\u2003\u2003 1.  Video   \u2003\u2003\u2003\u2003 2.  Sample Code  </p> <p>\u2003\u2003Greatest Element in Array: \u2003\u2003\u2003\u2003 1.  Video   \u2003\u2003\u2003\u2003 2.  Sample Code  </p> <p>\u2003\u2003Merge 2 Sorted Arrays: \u2003\u2003\u2003\u2003 1.  Video   \u2003\u2003\u2003\u2003 2.  Sample Code  </p> <p>\u2003\u2003Highest and Lowest occurrence of an element in an array: \u2003\u2003\u2003\u2003 1.  Video   \u2003\u2003\u2003\u2003 2.  Sample Code  </p> <p>\u2003\u2003Binary Search: \u2003\u2003\u2003\u2003 1.  Video   \u2003\u2003\u2003\u2003 2.  Sample Code  </p> <p>\u2003\u2003Quicksort: \u2003\u2003\u2003\u2003 1.  Video   \u2003\u2003\u2003\u2003 2.  Sample Code  </p>"},{"location":"mips_main/#2-d-integer-array-handling","title":"2-D Integer Array Handling","text":"<p>\u2003\u2003Main Documentation  : Click Here </p> <p>\u2003\u2003Theory Explanation: Video Link  \u2003\u2003Sample Code Bank: \u2003\u2003\u2003\u2003 1.  Taking Input  \u2003\u2003\u2003\u2003 2.  Printing a Matrix  \u2003\u2003\u2003\u2003 3.  Sum of Two Matrices  </p>"},{"location":"mips_main/#string-handling-advanced","title":"String Handling (advanced)","text":"<p>\u2003\u2003Input/Output of Strings: \u2003\u2003\u2003\u2003 1.  Video   \u2003\u2003\u2003\u2003 2.  Sample Code  </p> <p>\u2003\u2003Traversal of Strings (Advanced string operations): \u2003\u2003\u2003\u2003 1.  Video   \u2003\u2003\u2003\u2003 2.  Sample Code  </p> <p>\u2003\u2003Length of String: \u2003\u2003\u2003\u2003 1.  Video   \u2003\u2003\u2003\u2003 2.  Sample Code  </p> <p>\u2003\u2003Palindrome Check: \u2003\u2003\u2003\u2003 1.  Video   \u2003\u2003\u2003\u2003 2.  Sample Code  </p> <p>\u2003\u2003Concatenation of strings: \u2003\u2003\u2003\u2003 1.  Video   \u2003\u2003\u2003\u2003 2.  Sample Code  </p>"},{"location":"verilog_main/","title":"Welcome to the Verilog Guide","text":"<p>This course covers the following topics-</p>"},{"location":"verilog_main/#_1","title":"Verilog","text":"<ul> <li><code>Introduction To Verilog</code> - Learn the Basics of Verilog HDL.</li> <li><code>Finite State Machines</code> - Design a Verilog-based Finite State Machine (FSM) that enhances your circuits with efficient sequential control and decision-making capabilities.</li> <li><code>MIPS Single Cycle Processor</code> - Build an exciting MIPS single cycle processor which will allow you to run MIPS hardware commands.</li> </ul>"},{"location":"verilog_main/#introduction-to-verilog","title":"Introduction to Verilog","text":"<p> Theory : \u2003\u2003Documentation: Link to Main Documentation  \u2003\u2003Video Explanation of Theory: \u2003\u2003\u2003\u2003 1. Theory Vid Part 1 (INTRO TO VERILOG-LOGIC GATES-ADDERS-SUBTRACTORS)   \u2003\u2003\u2003\u2003 2. Theory Vid Part 2 (PARITY-TILL END)   </p> <p> Implementation : \u2003\u2003How to Run Verilog Files in Quartus: How to Run ?  \u2003\u2003Sample Codes: Link to Sample Codes  \u2003\u2003Video Explanation of Select Codes:  \u2003\u2003\u2003\u2003 1. Verilog Syntax   \u2003\u2003\u2003\u2003 2. Adder Subtractor   \u2003\u2003\u2003\u2003 3. DEMUX   \u2003\u2003\u2003\u2003 4. Counter   \u2003\u2003\u2003\u2003 5. Decoder   \u2003\u2003Assignment 1: Download Here </p>"},{"location":"verilog_main/#finite-state-machines","title":"Finite State Machines","text":"<p> Theory : \u2003\u2003Documentation: Link to Main Documentation  \u2003\u2003Video Explanation of Concept: \u2003\u2003\u2003\u2003 1.  Main Concept  \u2003\u2003\u2003\u2003 2.  Syntax (Optional) </p> <p> Implementation : \u2003\u2003Video Explanation of Code (From Documentation):  Examples of FSM along with Code explanation  \u2003\u2003Code Bank:  Link to Sample Codes  \u2003\u2003Assignment 2:  Download Here </p>"},{"location":"verilog_main/#single-cycle-mips-processor","title":"Single Cycle MIPS Processor","text":"<p> Theory :   \u2003\u2003Documentation: Link to Main Documentation   \u2003\u2003Video Explanation of Concept:   \u2003\u2003\u2003\u2003 1.  Control Unit Theory   \u2003\u2003\u2003\u2003 2.  Datapath Theory  </p> <p> Implementation : \u2003\u2003Video Explanation of Code (From Documentation) : \u2003\u2003\u2003\u2003 1.  Code Modules 1 to 5 explained  \u2003\u2003\u2003\u2003 2.  Code Modules 6 to 10 explained  \u2003\u2003\u2003\u2003 3.  All Testbenches explained  \u2003\u2003Code Bank:  Link to Sample Codes  \u2003\u2003Assignment 3:   Download Here </p>"}]}